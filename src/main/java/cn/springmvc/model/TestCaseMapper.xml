<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springmvc.dao.TestCaseMapper">
  <resultMap id="BaseResultMap" type="cn.springmvc.model.TestCase">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="run" jdbcType="VARCHAR" property="run" />
    <result column="system" jdbcType="VARCHAR" property="system" />
    <result column="caseName" jdbcType="VARCHAR" property="casename" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="header" jdbcType="VARCHAR" property="header" />
    <result column="checkpoint" jdbcType="VARCHAR" property="checkpoint" />
    <result column="correlation" jdbcType="VARCHAR" property="correlation" />
    <result column="beforefunc" jdbcType="VARCHAR" property="beforefunc" />
    <result column="dbchecksql" jdbcType="VARCHAR" property="dbchecksql" />
    <result column="dbexpected" jdbcType="VARCHAR" property="dbexpected" />
    <result column="testResult" jdbcType="VARCHAR" property="testresult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, run, system, caseName, url, params, type, header, checkpoint, correlation, 
    beforefunc, dbchecksql, dbexpected, testResult
  </sql>
  <select id="selectByExample" parameterType="cn.springmvc.model.TestCaseCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_case
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_case
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.springmvc.model.TestCaseCriteria">
    delete from t_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.springmvc.model.TestCase">
    insert into t_case (uuid, run, system, 
      caseName, url, params, 
      type, header, checkpoint, 
      correlation, beforefunc, dbchecksql, 
      dbexpected, testResult)
    values (#{uuid,jdbcType=VARCHAR}, #{run,jdbcType=VARCHAR}, #{system,jdbcType=VARCHAR}, 
      #{casename,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{header,jdbcType=VARCHAR}, #{checkpoint,jdbcType=VARCHAR}, 
      #{correlation,jdbcType=VARCHAR}, #{beforefunc,jdbcType=VARCHAR}, #{dbchecksql,jdbcType=VARCHAR}, 
      #{dbexpected,jdbcType=VARCHAR}, #{testresult,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvc.model.TestCase">
    insert into t_case
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="run != null">
        run,
      </if>
      <if test="system != null">
        system,
      </if>
      <if test="casename != null">
        caseName,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="header != null">
        header,
      </if>
      <if test="checkpoint != null">
        checkpoint,
      </if>
      <if test="correlation != null">
        correlation,
      </if>
      <if test="beforefunc != null">
        beforefunc,
      </if>
      <if test="dbchecksql != null">
        dbchecksql,
      </if>
      <if test="dbexpected != null">
        dbexpected,
      </if>
      <if test="testresult != null">
        testResult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="run != null">
        #{run,jdbcType=VARCHAR},
      </if>
      <if test="system != null">
        #{system,jdbcType=VARCHAR},
      </if>
      <if test="casename != null">
        #{casename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="header != null">
        #{header,jdbcType=VARCHAR},
      </if>
      <if test="checkpoint != null">
        #{checkpoint,jdbcType=VARCHAR},
      </if>
      <if test="correlation != null">
        #{correlation,jdbcType=VARCHAR},
      </if>
      <if test="beforefunc != null">
        #{beforefunc,jdbcType=VARCHAR},
      </if>
      <if test="dbchecksql != null">
        #{dbchecksql,jdbcType=VARCHAR},
      </if>
      <if test="dbexpected != null">
        #{dbexpected,jdbcType=VARCHAR},
      </if>
      <if test="testresult != null">
        #{testresult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.springmvc.model.TestCaseCriteria" resultType="java.lang.Long">
    select count(*) from t_case
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_case
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.run != null">
        run = #{record.run,jdbcType=VARCHAR},
      </if>
      <if test="record.system != null">
        system = #{record.system,jdbcType=VARCHAR},
      </if>
      <if test="record.casename != null">
        caseName = #{record.casename,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.header != null">
        header = #{record.header,jdbcType=VARCHAR},
      </if>
      <if test="record.checkpoint != null">
        checkpoint = #{record.checkpoint,jdbcType=VARCHAR},
      </if>
      <if test="record.correlation != null">
        correlation = #{record.correlation,jdbcType=VARCHAR},
      </if>
      <if test="record.beforefunc != null">
        beforefunc = #{record.beforefunc,jdbcType=VARCHAR},
      </if>
      <if test="record.dbchecksql != null">
        dbchecksql = #{record.dbchecksql,jdbcType=VARCHAR},
      </if>
      <if test="record.dbexpected != null">
        dbexpected = #{record.dbexpected,jdbcType=VARCHAR},
      </if>
      <if test="record.testresult != null">
        testResult = #{record.testresult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_case
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      run = #{record.run,jdbcType=VARCHAR},
      system = #{record.system,jdbcType=VARCHAR},
      caseName = #{record.casename,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      header = #{record.header,jdbcType=VARCHAR},
      checkpoint = #{record.checkpoint,jdbcType=VARCHAR},
      correlation = #{record.correlation,jdbcType=VARCHAR},
      beforefunc = #{record.beforefunc,jdbcType=VARCHAR},
      dbchecksql = #{record.dbchecksql,jdbcType=VARCHAR},
      dbexpected = #{record.dbexpected,jdbcType=VARCHAR},
      testResult = #{record.testresult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.model.TestCase">
    update t_case
    <set>
      <if test="run != null">
        run = #{run,jdbcType=VARCHAR},
      </if>
      <if test="system != null">
        system = #{system,jdbcType=VARCHAR},
      </if>
      <if test="casename != null">
        caseName = #{casename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="header != null">
        header = #{header,jdbcType=VARCHAR},
      </if>
      <if test="checkpoint != null">
        checkpoint = #{checkpoint,jdbcType=VARCHAR},
      </if>
      <if test="correlation != null">
        correlation = #{correlation,jdbcType=VARCHAR},
      </if>
      <if test="beforefunc != null">
        beforefunc = #{beforefunc,jdbcType=VARCHAR},
      </if>
      <if test="dbchecksql != null">
        dbchecksql = #{dbchecksql,jdbcType=VARCHAR},
      </if>
      <if test="dbexpected != null">
        dbexpected = #{dbexpected,jdbcType=VARCHAR},
      </if>
      <if test="testresult != null">
        testResult = #{testresult,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvc.model.TestCase">
    update t_case
    set run = #{run,jdbcType=VARCHAR},
      system = #{system,jdbcType=VARCHAR},
      caseName = #{casename,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      header = #{header,jdbcType=VARCHAR},
      checkpoint = #{checkpoint,jdbcType=VARCHAR},
      correlation = #{correlation,jdbcType=VARCHAR},
      beforefunc = #{beforefunc,jdbcType=VARCHAR},
      dbchecksql = #{dbchecksql,jdbcType=VARCHAR},
      dbexpected = #{dbexpected,jdbcType=VARCHAR},
      testResult = #{testresult,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>